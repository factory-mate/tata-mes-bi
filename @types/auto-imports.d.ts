/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const AnimatePresence: typeof import('framer-motion')['AnimatePresence']
  const AnimatedNumber: typeof import('../src/shared/components/AnimatedNumber/index')['default']
  const AuthUtils: typeof import('@bit-ocean/utils')['AuthUtils']
  const Await: typeof import('@tanstack/react-router')['Await']
  const AxiosProvider: typeof import('../src/shared/providers/AxiosProvider/index')['default']
  const Block: typeof import('@tanstack/react-router')['Block']
  const BlockContainer: typeof import('../src/shared/components/BlockContainer/index')['default']
  const BrowserUtils: typeof import('@bit-ocean/utils')['BrowserUtils']
  const ClockPanel: typeof import('../src/shared/components/ClockPanel/index')['default']
  const DateUtils: typeof import('@bit-ocean/utils')['DateUtils']
  const Fragment: typeof import('react')['Fragment']
  const I18nUtils: typeof import('@bit-ocean/utils')['I18nUtils']
  const IsUtils: typeof import('@bit-ocean/utils')['IsUtils']
  const KB_SERVICE_API_PREFIX: typeof import('../src/shared/api/index')['KB_SERVICE_API_PREFIX']
  const LangUtils: typeof import('@bit-ocean/utils')['LangUtils']
  const Link: typeof import('@tanstack/react-router')['Link']
  const LoaderContext: typeof import('@tanstack/react-router')['LoaderContext']
  const MatchRoute: typeof import('@tanstack/react-router')['MatchRoute']
  const MutationCache: typeof import('@tanstack/react-query')['MutationCache']
  const NotFoundRoute: typeof import('@tanstack/react-router')['NotFoundRoute']
  const Outlet: typeof import('@tanstack/react-router')['Outlet']
  const QueryClient: typeof import('@tanstack/react-query')['QueryClient']
  const QueryClientProvider: typeof import('@tanstack/react-query')['QueryClientProvider']
  const QueryProvider: typeof import('../src/shared/providers/QueryProvider/index')['default']
  const ReactChart: typeof import('@bit-ocean/echarts')['ReactChart']
  const RouterProvider: typeof import('@tanstack/react-router')['RouterProvider']
  const ScrollRestoration: typeof import('@tanstack/react-router')['ScrollRestoration']
  const ScrollTable: typeof import('../src/shared/components/ScrollTable/index')['default']
  const Suspense: typeof import('react')['Suspense']
  const ThemeUtils: typeof import('@bit-ocean/utils')['ThemeUtils']
  const TitleRow: typeof import('../src/shared/components/TitleRow/index')['default']
  const cloneElement: typeof import('react')['cloneElement']
  const clsx: typeof import('clsx')['default']
  const createContext: typeof import('react')['createContext']
  const createElement: typeof import('react')['createElement']
  const createFileRoute: typeof import('@tanstack/react-router')['createFileRoute']
  const createLazyFileRoute: typeof import('@tanstack/react-router')['createLazyFileRoute']
  const createRef: typeof import('react')['createRef']
  const createRootRouteWithContext: typeof import('@tanstack/react-router')['createRootRouteWithContext']
  const createRouter: typeof import('@tanstack/react-router')['createRouter']
  const dayjs: typeof import('dayjs')['default']
  const echarts: typeof import('../src/shared/echarts/index')['default']
  const focusManager: typeof import('@tanstack/react-query')['focusManager']
  const forwardRef: typeof import('react')['forwardRef']
  const getRouteApi: typeof import('@tanstack/react-router')['getRouteApi']
  const httpClient: typeof import('../src/shared/api/index')['httpClient']
  const keepPreviousData: typeof import('@tanstack/react-query')['keepPreviousData']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const motion: typeof import('framer-motion')['motion']
  const notFound: typeof import('@tanstack/react-router')['notFound']
  const onlineManager: typeof import('@tanstack/react-query')['onlineManager']
  const queryClient: typeof import('@/shared/query-client')['queryClient']
  const queryOptions: typeof import('@tanstack/react-query')['queryOptions']
  const redirect: typeof import('@tanstack/react-router')['redirect']
  const router: typeof import('@/shared/router')['router']
  const startTransition: typeof import('react')['startTransition']
  const teamConfig: typeof import('@bit-ocean/config')['teamConfig']
  const useBlocker: typeof import('@tanstack/react-router')['useBlocker']
  const useCallback: typeof import('react')['useCallback']
  const useChartStore: typeof import('../src/shared/store/chart')['useChartStore']
  const useChildMatches: typeof import('@tanstack/react-router')['useChildMatches']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImmer: typeof import('use-immer')['useImmer']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInfiniteQuery: typeof import('@tanstack/react-query')['useInfiniteQuery']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useIsFetching: typeof import('@tanstack/react-query')['useIsFetching']
  const useIsMutating: typeof import('@tanstack/react-query')['useIsMutating']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLoaderData: typeof import('@tanstack/react-router')['useLoaderData']
  const useLocation: typeof import('@tanstack/react-router')['useLocation']
  const useMatch: typeof import('@tanstack/react-router')['useMatch']
  const useMatchRoute: typeof import('@tanstack/react-router')['useMatchRoute']
  const useMatches: typeof import('@tanstack/react-router')['useMatches']
  const useMemo: typeof import('react')['useMemo']
  const useMutation: typeof import('@tanstack/react-query')['useMutation']
  const useMutationState: typeof import('@tanstack/react-query')['useMutationState']
  const useNavigate: typeof import('@tanstack/react-router')['useNavigate']
  const useParams: typeof import('@tanstack/react-router')['useParams']
  const useParentMatches: typeof import('@tanstack/react-router')['useParentMatches']
  const useQueries: typeof import('@tanstack/react-query')['useQueries']
  const useQuery: typeof import('@tanstack/react-query')['useQuery']
  const useQueryClient: typeof import('@tanstack/react-query')['useQueryClient']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useRouteContext: typeof import('@tanstack/react-router')['useRouteContext']
  const useRouteStaticData: typeof import('@bit-ocean/hooks')['useRouteStaticData']
  const useRouter: typeof import('@tanstack/react-router')['useRouter']
  const useRouterState: typeof import('@tanstack/react-router')['useRouterState']
  const useRoutesStaticData: typeof import('@bit-ocean/hooks')['useRoutesStaticData']
  const useSearch: typeof import('@tanstack/react-router')['useSearch']
  const useSlicedData: typeof import('../src/shared/hooks/useSlicedData')['useSlicedData']
  const useState: typeof import('react')['useState']
  const useSuspenseInfiniteQuery: typeof import('@tanstack/react-query')['useSuspenseInfiniteQuery']
  const useSuspenseQueries: typeof import('@tanstack/react-query')['useSuspenseQueries']
  const useSuspenseQuery: typeof import('@tanstack/react-query')['useSuspenseQuery']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const useTranslation: typeof import('react-i18next')['useTranslation']
  const z: typeof import('zod')['z']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Templates, ChartRawData } from '../src/shared/types/charts'
  import('../src/shared/types/charts')
  // @ts-ignore
  export type { Page, PageDto, FullPageDto } from '../src/shared/types/pagination'
  import('../src/shared/types/pagination')
}
