/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as BaseDeviceImport } from './../../routes/_base.device'
import { Route as BaseWarehouseWarehouseImport } from './../../routes/_base.warehouse_.warehouse'
import { Route as BaseWarehouseCargoManagementImport } from './../../routes/_base.warehouse_.cargo-management'
import { Route as BaseQualityQualityImport } from './../../routes/_base.quality_.quality'
import { Route as BasePlateWireframeImport } from './../../routes/_base.plate_.wireframe'
import { Route as BasePlatePlateWrapImport } from './../../routes/_base.plate_.plate-wrap'
import { Route as BasePlatePlatePackageImport } from './../../routes/_base.plate_.plate-package'
import { Route as BasePlatePlateNailingImport } from './../../routes/_base.plate_.plate-nailing'
import { Route as BasePlatePlateCuttingImport } from './../../routes/_base.plate_.plate-cutting'
import { Route as BasePlateLineWorkshopImport } from './../../routes/_base.plate_.line-workshop'
import { Route as BasePlateLLineWrapImport } from './../../routes/_base.plate_.l-line-wrap'
import { Route as BasePlateLLinePackageImport } from './../../routes/_base.plate_.l-line-package'
import { Route as BasePlateLLineFineCutImport } from './../../routes/_base.plate_.l-line-fine-cut'
import { Route as BasePlateHangingPackageImport } from './../../routes/_base.plate_.hanging-package'
import { Route as BasePlateHangingCuttingImport } from './../../routes/_base.plate_.hanging-cutting'
import { Route as BasePlateHangingBoardWorkshopImport } from './../../routes/_base.plate_.hanging-board-workshop'
import { Route as BasePlateDoorFrameWorkshopImport } from './../../routes/_base.plate_.door-frame-workshop'
import { Route as BasePlanPlanImport } from './../../routes/_base.plan_.plan'
import { Route as BaseDoorLeafDoorSkinPanelWorkshopImport } from './../../routes/_base.door-leaf_.door-skin-panel-workshop'
import { Route as BaseDoorLeafDoorSkinPanelProductionLineImport } from './../../routes/_base.door-leaf_.door-skin-panel-production-line'
import { Route as BaseDoorLeafDoorLeafWorkshopImport } from './../../routes/_base.door-leaf_.door-leaf-workshop'
import { Route as BaseDoorLeafDoorLeafProductionLineImport } from './../../routes/_base.door-leaf_.door-leaf-production-line'
import { Route as BaseDoorLeafDoorLeafPackageImport } from './../../routes/_base.door-leaf_.door-leaf-package'

// Create Virtual Routes

const BaseLazyImport = createFileRoute('/_base')()
const SplatLazyImport = createFileRoute('/$')()
const BaseIndexLazyImport = createFileRoute('/_base/')()

// Create/Update Routes

const BaseLazyRoute = BaseLazyImport.update({
  id: '/_base',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../../routes/_base.lazy').then((d) => d.Route))

const SplatLazyRoute = SplatLazyImport.update({
  path: '/$',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../../routes/$.lazy').then((d) => d.Route))

const BaseIndexLazyRoute = BaseIndexLazyImport.update({
  path: '/',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.index.lazy').then((d) => d.Route),
)

const BaseDeviceRoute = BaseDeviceImport.update({
  path: '/device',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.device.lazy').then((d) => d.Route),
)

const BaseWarehouseWarehouseRoute = BaseWarehouseWarehouseImport.update({
  path: '/warehouse/warehouse',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.warehouse_.warehouse.lazy').then((d) => d.Route),
)

const BaseWarehouseCargoManagementRoute =
  BaseWarehouseCargoManagementImport.update({
    path: '/warehouse/cargo-management',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.warehouse_.cargo-management.lazy').then(
      (d) => d.Route,
    ),
  )

const BaseQualityQualityRoute = BaseQualityQualityImport.update({
  path: '/quality/quality',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.quality_.quality.lazy').then((d) => d.Route),
)

const BasePlateWireframeRoute = BasePlateWireframeImport.update({
  path: '/plate/wireframe',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.wireframe.lazy').then((d) => d.Route),
)

const BasePlatePlateWrapRoute = BasePlatePlateWrapImport.update({
  path: '/plate/plate-wrap',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-wrap.lazy').then((d) => d.Route),
)

const BasePlatePlatePackageRoute = BasePlatePlatePackageImport.update({
  path: '/plate/plate-package',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-package.lazy').then((d) => d.Route),
)

const BasePlatePlateNailingRoute = BasePlatePlateNailingImport.update({
  path: '/plate/plate-nailing',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-nailing.lazy').then((d) => d.Route),
)

const BasePlatePlateCuttingRoute = BasePlatePlateCuttingImport.update({
  path: '/plate/plate-cutting',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-cutting.lazy').then((d) => d.Route),
)

const BasePlateLineWorkshopRoute = BasePlateLineWorkshopImport.update({
  path: '/plate/line-workshop',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.line-workshop.lazy').then((d) => d.Route),
)

const BasePlateLLineWrapRoute = BasePlateLLineWrapImport.update({
  path: '/plate/l-line-wrap',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.l-line-wrap.lazy').then((d) => d.Route),
)

const BasePlateLLinePackageRoute = BasePlateLLinePackageImport.update({
  path: '/plate/l-line-package',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.l-line-package.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateLLineFineCutRoute = BasePlateLLineFineCutImport.update({
  path: '/plate/l-line-fine-cut',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.l-line-fine-cut.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateHangingPackageRoute = BasePlateHangingPackageImport.update({
  path: '/plate/hanging-package',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.hanging-package.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateHangingCuttingRoute = BasePlateHangingCuttingImport.update({
  path: '/plate/hanging-cutting',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.hanging-cutting.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateHangingBoardWorkshopRoute =
  BasePlateHangingBoardWorkshopImport.update({
    path: '/plate/hanging-board-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.plate_.hanging-board-workshop.lazy').then(
      (d) => d.Route,
    ),
  )

const BasePlateDoorFrameWorkshopRoute = BasePlateDoorFrameWorkshopImport.update(
  {
    path: '/plate/door-frame-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any,
).lazy(() =>
  import('./../../routes/_base.plate_.door-frame-workshop.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlanPlanRoute = BasePlanPlanImport.update({
  path: '/plan/plan',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plan_.plan.lazy').then((d) => d.Route),
)

const BaseDoorLeafDoorSkinPanelWorkshopRoute =
  BaseDoorLeafDoorSkinPanelWorkshopImport.update({
    path: '/door-leaf/door-skin-panel-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import(
      './../../routes/_base.door-leaf_.door-skin-panel-workshop.lazy'
    ).then((d) => d.Route),
  )

const BaseDoorLeafDoorSkinPanelProductionLineRoute =
  BaseDoorLeafDoorSkinPanelProductionLineImport.update({
    path: '/door-leaf/door-skin-panel-production-line',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import(
      './../../routes/_base.door-leaf_.door-skin-panel-production-line.lazy'
    ).then((d) => d.Route),
  )

const BaseDoorLeafDoorLeafWorkshopRoute =
  BaseDoorLeafDoorLeafWorkshopImport.update({
    path: '/door-leaf/door-leaf-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.door-leaf_.door-leaf-workshop.lazy').then(
      (d) => d.Route,
    ),
  )

const BaseDoorLeafDoorLeafProductionLineRoute =
  BaseDoorLeafDoorLeafProductionLineImport.update({
    path: '/door-leaf/door-leaf-production-line',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import(
      './../../routes/_base.door-leaf_.door-leaf-production-line.lazy'
    ).then((d) => d.Route),
  )

const BaseDoorLeafDoorLeafPackageRoute =
  BaseDoorLeafDoorLeafPackageImport.update({
    path: '/door-leaf/door-leaf-package',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.door-leaf_.door-leaf-package.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatLazyImport
      parentRoute: typeof rootRoute
    }
    '/_base': {
      id: '/_base'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BaseLazyImport
      parentRoute: typeof rootRoute
    }
    '/_base/device': {
      id: '/_base/device'
      path: '/device'
      fullPath: '/device'
      preLoaderRoute: typeof BaseDeviceImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/': {
      id: '/_base/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof BaseIndexLazyImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf/door-leaf-package': {
      id: '/_base/door-leaf/door-leaf-package'
      path: '/door-leaf/door-leaf-package'
      fullPath: '/door-leaf/door-leaf-package'
      preLoaderRoute: typeof BaseDoorLeafDoorLeafPackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf/door-leaf-production-line': {
      id: '/_base/door-leaf/door-leaf-production-line'
      path: '/door-leaf/door-leaf-production-line'
      fullPath: '/door-leaf/door-leaf-production-line'
      preLoaderRoute: typeof BaseDoorLeafDoorLeafProductionLineImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf/door-leaf-workshop': {
      id: '/_base/door-leaf/door-leaf-workshop'
      path: '/door-leaf/door-leaf-workshop'
      fullPath: '/door-leaf/door-leaf-workshop'
      preLoaderRoute: typeof BaseDoorLeafDoorLeafWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf/door-skin-panel-production-line': {
      id: '/_base/door-leaf/door-skin-panel-production-line'
      path: '/door-leaf/door-skin-panel-production-line'
      fullPath: '/door-leaf/door-skin-panel-production-line'
      preLoaderRoute: typeof BaseDoorLeafDoorSkinPanelProductionLineImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf/door-skin-panel-workshop': {
      id: '/_base/door-leaf/door-skin-panel-workshop'
      path: '/door-leaf/door-skin-panel-workshop'
      fullPath: '/door-leaf/door-skin-panel-workshop'
      preLoaderRoute: typeof BaseDoorLeafDoorSkinPanelWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plan/plan': {
      id: '/_base/plan/plan'
      path: '/plan/plan'
      fullPath: '/plan/plan'
      preLoaderRoute: typeof BasePlanPlanImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/door-frame-workshop': {
      id: '/_base/plate/door-frame-workshop'
      path: '/plate/door-frame-workshop'
      fullPath: '/plate/door-frame-workshop'
      preLoaderRoute: typeof BasePlateDoorFrameWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/hanging-board-workshop': {
      id: '/_base/plate/hanging-board-workshop'
      path: '/plate/hanging-board-workshop'
      fullPath: '/plate/hanging-board-workshop'
      preLoaderRoute: typeof BasePlateHangingBoardWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/hanging-cutting': {
      id: '/_base/plate/hanging-cutting'
      path: '/plate/hanging-cutting'
      fullPath: '/plate/hanging-cutting'
      preLoaderRoute: typeof BasePlateHangingCuttingImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/hanging-package': {
      id: '/_base/plate/hanging-package'
      path: '/plate/hanging-package'
      fullPath: '/plate/hanging-package'
      preLoaderRoute: typeof BasePlateHangingPackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/l-line-fine-cut': {
      id: '/_base/plate/l-line-fine-cut'
      path: '/plate/l-line-fine-cut'
      fullPath: '/plate/l-line-fine-cut'
      preLoaderRoute: typeof BasePlateLLineFineCutImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/l-line-package': {
      id: '/_base/plate/l-line-package'
      path: '/plate/l-line-package'
      fullPath: '/plate/l-line-package'
      preLoaderRoute: typeof BasePlateLLinePackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/l-line-wrap': {
      id: '/_base/plate/l-line-wrap'
      path: '/plate/l-line-wrap'
      fullPath: '/plate/l-line-wrap'
      preLoaderRoute: typeof BasePlateLLineWrapImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/line-workshop': {
      id: '/_base/plate/line-workshop'
      path: '/plate/line-workshop'
      fullPath: '/plate/line-workshop'
      preLoaderRoute: typeof BasePlateLineWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/plate-cutting': {
      id: '/_base/plate/plate-cutting'
      path: '/plate/plate-cutting'
      fullPath: '/plate/plate-cutting'
      preLoaderRoute: typeof BasePlatePlateCuttingImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/plate-nailing': {
      id: '/_base/plate/plate-nailing'
      path: '/plate/plate-nailing'
      fullPath: '/plate/plate-nailing'
      preLoaderRoute: typeof BasePlatePlateNailingImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/plate-package': {
      id: '/_base/plate/plate-package'
      path: '/plate/plate-package'
      fullPath: '/plate/plate-package'
      preLoaderRoute: typeof BasePlatePlatePackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/plate-wrap': {
      id: '/_base/plate/plate-wrap'
      path: '/plate/plate-wrap'
      fullPath: '/plate/plate-wrap'
      preLoaderRoute: typeof BasePlatePlateWrapImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate/wireframe': {
      id: '/_base/plate/wireframe'
      path: '/plate/wireframe'
      fullPath: '/plate/wireframe'
      preLoaderRoute: typeof BasePlateWireframeImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/quality/quality': {
      id: '/_base/quality/quality'
      path: '/quality/quality'
      fullPath: '/quality/quality'
      preLoaderRoute: typeof BaseQualityQualityImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/warehouse/cargo-management': {
      id: '/_base/warehouse/cargo-management'
      path: '/warehouse/cargo-management'
      fullPath: '/warehouse/cargo-management'
      preLoaderRoute: typeof BaseWarehouseCargoManagementImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/warehouse/warehouse': {
      id: '/_base/warehouse/warehouse'
      path: '/warehouse/warehouse'
      fullPath: '/warehouse/warehouse'
      preLoaderRoute: typeof BaseWarehouseWarehouseImport
      parentRoute: typeof BaseLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  SplatLazyRoute,
  BaseLazyRoute: BaseLazyRoute.addChildren({
    BaseDeviceRoute,
    BaseIndexLazyRoute,
    BaseDoorLeafDoorLeafPackageRoute,
    BaseDoorLeafDoorLeafProductionLineRoute,
    BaseDoorLeafDoorLeafWorkshopRoute,
    BaseDoorLeafDoorSkinPanelProductionLineRoute,
    BaseDoorLeafDoorSkinPanelWorkshopRoute,
    BasePlanPlanRoute,
    BasePlateDoorFrameWorkshopRoute,
    BasePlateHangingBoardWorkshopRoute,
    BasePlateHangingCuttingRoute,
    BasePlateHangingPackageRoute,
    BasePlateLLineFineCutRoute,
    BasePlateLLinePackageRoute,
    BasePlateLLineWrapRoute,
    BasePlateLineWorkshopRoute,
    BasePlatePlateCuttingRoute,
    BasePlatePlateNailingRoute,
    BasePlatePlatePackageRoute,
    BasePlatePlateWrapRoute,
    BasePlateWireframeRoute,
    BaseQualityQualityRoute,
    BaseWarehouseCargoManagementRoute,
    BaseWarehouseWarehouseRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$",
        "/_base"
      ]
    },
    "/$": {
      "filePath": "$.lazy.tsx"
    },
    "/_base": {
      "filePath": "_base.lazy.tsx",
      "children": [
        "/_base/device",
        "/_base/",
        "/_base/door-leaf/door-leaf-package",
        "/_base/door-leaf/door-leaf-production-line",
        "/_base/door-leaf/door-leaf-workshop",
        "/_base/door-leaf/door-skin-panel-production-line",
        "/_base/door-leaf/door-skin-panel-workshop",
        "/_base/plan/plan",
        "/_base/plate/door-frame-workshop",
        "/_base/plate/hanging-board-workshop",
        "/_base/plate/hanging-cutting",
        "/_base/plate/hanging-package",
        "/_base/plate/l-line-fine-cut",
        "/_base/plate/l-line-package",
        "/_base/plate/l-line-wrap",
        "/_base/plate/line-workshop",
        "/_base/plate/plate-cutting",
        "/_base/plate/plate-nailing",
        "/_base/plate/plate-package",
        "/_base/plate/plate-wrap",
        "/_base/plate/wireframe",
        "/_base/quality/quality",
        "/_base/warehouse/cargo-management",
        "/_base/warehouse/warehouse"
      ]
    },
    "/_base/device": {
      "filePath": "_base.device.tsx",
      "parent": "/_base"
    },
    "/_base/": {
      "filePath": "_base.index.lazy.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf/door-leaf-package": {
      "filePath": "_base.door-leaf_.door-leaf-package.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf/door-leaf-production-line": {
      "filePath": "_base.door-leaf_.door-leaf-production-line.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf/door-leaf-workshop": {
      "filePath": "_base.door-leaf_.door-leaf-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf/door-skin-panel-production-line": {
      "filePath": "_base.door-leaf_.door-skin-panel-production-line.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf/door-skin-panel-workshop": {
      "filePath": "_base.door-leaf_.door-skin-panel-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plan/plan": {
      "filePath": "_base.plan_.plan.tsx",
      "parent": "/_base"
    },
    "/_base/plate/door-frame-workshop": {
      "filePath": "_base.plate_.door-frame-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plate/hanging-board-workshop": {
      "filePath": "_base.plate_.hanging-board-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plate/hanging-cutting": {
      "filePath": "_base.plate_.hanging-cutting.tsx",
      "parent": "/_base"
    },
    "/_base/plate/hanging-package": {
      "filePath": "_base.plate_.hanging-package.tsx",
      "parent": "/_base"
    },
    "/_base/plate/l-line-fine-cut": {
      "filePath": "_base.plate_.l-line-fine-cut.tsx",
      "parent": "/_base"
    },
    "/_base/plate/l-line-package": {
      "filePath": "_base.plate_.l-line-package.tsx",
      "parent": "/_base"
    },
    "/_base/plate/l-line-wrap": {
      "filePath": "_base.plate_.l-line-wrap.tsx",
      "parent": "/_base"
    },
    "/_base/plate/line-workshop": {
      "filePath": "_base.plate_.line-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plate/plate-cutting": {
      "filePath": "_base.plate_.plate-cutting.tsx",
      "parent": "/_base"
    },
    "/_base/plate/plate-nailing": {
      "filePath": "_base.plate_.plate-nailing.tsx",
      "parent": "/_base"
    },
    "/_base/plate/plate-package": {
      "filePath": "_base.plate_.plate-package.tsx",
      "parent": "/_base"
    },
    "/_base/plate/plate-wrap": {
      "filePath": "_base.plate_.plate-wrap.tsx",
      "parent": "/_base"
    },
    "/_base/plate/wireframe": {
      "filePath": "_base.plate_.wireframe.tsx",
      "parent": "/_base"
    },
    "/_base/quality/quality": {
      "filePath": "_base.quality_.quality.tsx",
      "parent": "/_base"
    },
    "/_base/warehouse/cargo-management": {
      "filePath": "_base.warehouse_.cargo-management.tsx",
      "parent": "/_base"
    },
    "/_base/warehouse/warehouse": {
      "filePath": "_base.warehouse_.warehouse.tsx",
      "parent": "/_base"
    }
  }
}
ROUTE_MANIFEST_END */
