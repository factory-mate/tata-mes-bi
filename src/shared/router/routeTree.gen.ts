/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as BaseDeviceImport } from './../../routes/_base.device'
import { Route as BaseWarehouseWarehouseImport } from './../../routes/_base.warehouse_.warehouse'
import { Route as BaseWarehouseCargoManagementImport } from './../../routes/_base.warehouse_.cargo-management'
import { Route as BaseQualityQualityImport } from './../../routes/_base.quality_.quality'
import { Route as BasePlateWireframeImport } from './../../routes/_base.plate_.wireframe'
import { Route as BasePlatePlateWrapImport } from './../../routes/_base.plate_.plate-wrap'
import { Route as BasePlatePlatePackageImport } from './../../routes/_base.plate_.plate-package'
import { Route as BasePlatePlateNailingImport } from './../../routes/_base.plate_.plate-nailing'
import { Route as BasePlatePlateCuttingImport } from './../../routes/_base.plate_.plate-cutting'
import { Route as BasePlateLineWorkshopImport } from './../../routes/_base.plate_.line-workshop'
import { Route as BasePlateLLineWrapImport } from './../../routes/_base.plate_.l-line-wrap'
import { Route as BasePlateLLinePackageImport } from './../../routes/_base.plate_.l-line-package'
import { Route as BasePlateLLineFineCutImport } from './../../routes/_base.plate_.l-line-fine-cut'
import { Route as BasePlateHangingPackageImport } from './../../routes/_base.plate_.hanging-package'
import { Route as BasePlateHangingCuttingImport } from './../../routes/_base.plate_.hanging-cutting'
import { Route as BasePlateHangingBoardWorkshopImport } from './../../routes/_base.plate_.hanging-board-workshop'
import { Route as BasePlateDoorFrameWorkshopImport } from './../../routes/_base.plate_.door-frame-workshop'
import { Route as BasePlanPlanImport } from './../../routes/_base.plan_.plan'
import { Route as BaseDoorLeafDoorSkinPanelWorkshopImport } from './../../routes/_base.door-leaf_.door-skin-panel-workshop'
import { Route as BaseDoorLeafDoorSkinPanelProductionLineImport } from './../../routes/_base.door-leaf_.door-skin-panel-production-line'
import { Route as BaseDoorLeafDoorLeafWorkshopImport } from './../../routes/_base.door-leaf_.door-leaf-workshop'
import { Route as BaseDoorLeafDoorLeafProductionLineImport } from './../../routes/_base.door-leaf_.door-leaf-production-line'
import { Route as BaseDoorLeafDoorLeafPackageImport } from './../../routes/_base.door-leaf_.door-leaf-package'

// Create Virtual Routes

const BaseLazyImport = createFileRoute('/_base')()
const SplatLazyImport = createFileRoute('/$')()
const BaseIndexLazyImport = createFileRoute('/_base/')()

// Create/Update Routes

const BaseLazyRoute = BaseLazyImport.update({
  id: '/_base',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../../routes/_base.lazy').then((d) => d.Route))

const SplatLazyRoute = SplatLazyImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../../routes/$.lazy').then((d) => d.Route))

const BaseIndexLazyRoute = BaseIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.index.lazy').then((d) => d.Route),
)

const BaseDeviceRoute = BaseDeviceImport.update({
  id: '/device',
  path: '/device',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.device.lazy').then((d) => d.Route),
)

const BaseWarehouseWarehouseRoute = BaseWarehouseWarehouseImport.update({
  id: '/warehouse_/warehouse',
  path: '/warehouse/warehouse',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.warehouse_.warehouse.lazy').then((d) => d.Route),
)

const BaseWarehouseCargoManagementRoute =
  BaseWarehouseCargoManagementImport.update({
    id: '/warehouse_/cargo-management',
    path: '/warehouse/cargo-management',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.warehouse_.cargo-management.lazy').then(
      (d) => d.Route,
    ),
  )

const BaseQualityQualityRoute = BaseQualityQualityImport.update({
  id: '/quality_/quality',
  path: '/quality/quality',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.quality_.quality.lazy').then((d) => d.Route),
)

const BasePlateWireframeRoute = BasePlateWireframeImport.update({
  id: '/plate_/wireframe',
  path: '/plate/wireframe',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.wireframe.lazy').then((d) => d.Route),
)

const BasePlatePlateWrapRoute = BasePlatePlateWrapImport.update({
  id: '/plate_/plate-wrap',
  path: '/plate/plate-wrap',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-wrap.lazy').then((d) => d.Route),
)

const BasePlatePlatePackageRoute = BasePlatePlatePackageImport.update({
  id: '/plate_/plate-package',
  path: '/plate/plate-package',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-package.lazy').then((d) => d.Route),
)

const BasePlatePlateNailingRoute = BasePlatePlateNailingImport.update({
  id: '/plate_/plate-nailing',
  path: '/plate/plate-nailing',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-nailing.lazy').then((d) => d.Route),
)

const BasePlatePlateCuttingRoute = BasePlatePlateCuttingImport.update({
  id: '/plate_/plate-cutting',
  path: '/plate/plate-cutting',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.plate-cutting.lazy').then((d) => d.Route),
)

const BasePlateLineWorkshopRoute = BasePlateLineWorkshopImport.update({
  id: '/plate_/line-workshop',
  path: '/plate/line-workshop',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.line-workshop.lazy').then((d) => d.Route),
)

const BasePlateLLineWrapRoute = BasePlateLLineWrapImport.update({
  id: '/plate_/l-line-wrap',
  path: '/plate/l-line-wrap',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.l-line-wrap.lazy').then((d) => d.Route),
)

const BasePlateLLinePackageRoute = BasePlateLLinePackageImport.update({
  id: '/plate_/l-line-package',
  path: '/plate/l-line-package',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.l-line-package.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateLLineFineCutRoute = BasePlateLLineFineCutImport.update({
  id: '/plate_/l-line-fine-cut',
  path: '/plate/l-line-fine-cut',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.l-line-fine-cut.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateHangingPackageRoute = BasePlateHangingPackageImport.update({
  id: '/plate_/hanging-package',
  path: '/plate/hanging-package',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.hanging-package.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateHangingCuttingRoute = BasePlateHangingCuttingImport.update({
  id: '/plate_/hanging-cutting',
  path: '/plate/hanging-cutting',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plate_.hanging-cutting.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlateHangingBoardWorkshopRoute =
  BasePlateHangingBoardWorkshopImport.update({
    id: '/plate_/hanging-board-workshop',
    path: '/plate/hanging-board-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.plate_.hanging-board-workshop.lazy').then(
      (d) => d.Route,
    ),
  )

const BasePlateDoorFrameWorkshopRoute = BasePlateDoorFrameWorkshopImport.update(
  {
    id: '/plate_/door-frame-workshop',
    path: '/plate/door-frame-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any,
).lazy(() =>
  import('./../../routes/_base.plate_.door-frame-workshop.lazy').then(
    (d) => d.Route,
  ),
)

const BasePlanPlanRoute = BasePlanPlanImport.update({
  id: '/plan_/plan',
  path: '/plan/plan',
  getParentRoute: () => BaseLazyRoute,
} as any).lazy(() =>
  import('./../../routes/_base.plan_.plan.lazy').then((d) => d.Route),
)

const BaseDoorLeafDoorSkinPanelWorkshopRoute =
  BaseDoorLeafDoorSkinPanelWorkshopImport.update({
    id: '/door-leaf_/door-skin-panel-workshop',
    path: '/door-leaf/door-skin-panel-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import(
      './../../routes/_base.door-leaf_.door-skin-panel-workshop.lazy'
    ).then((d) => d.Route),
  )

const BaseDoorLeafDoorSkinPanelProductionLineRoute =
  BaseDoorLeafDoorSkinPanelProductionLineImport.update({
    id: '/door-leaf_/door-skin-panel-production-line',
    path: '/door-leaf/door-skin-panel-production-line',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import(
      './../../routes/_base.door-leaf_.door-skin-panel-production-line.lazy'
    ).then((d) => d.Route),
  )

const BaseDoorLeafDoorLeafWorkshopRoute =
  BaseDoorLeafDoorLeafWorkshopImport.update({
    id: '/door-leaf_/door-leaf-workshop',
    path: '/door-leaf/door-leaf-workshop',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.door-leaf_.door-leaf-workshop.lazy').then(
      (d) => d.Route,
    ),
  )

const BaseDoorLeafDoorLeafProductionLineRoute =
  BaseDoorLeafDoorLeafProductionLineImport.update({
    id: '/door-leaf_/door-leaf-production-line',
    path: '/door-leaf/door-leaf-production-line',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import(
      './../../routes/_base.door-leaf_.door-leaf-production-line.lazy'
    ).then((d) => d.Route),
  )

const BaseDoorLeafDoorLeafPackageRoute =
  BaseDoorLeafDoorLeafPackageImport.update({
    id: '/door-leaf_/door-leaf-package',
    path: '/door-leaf/door-leaf-package',
    getParentRoute: () => BaseLazyRoute,
  } as any).lazy(() =>
    import('./../../routes/_base.door-leaf_.door-leaf-package.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatLazyImport
      parentRoute: typeof rootRoute
    }
    '/_base': {
      id: '/_base'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BaseLazyImport
      parentRoute: typeof rootRoute
    }
    '/_base/device': {
      id: '/_base/device'
      path: '/device'
      fullPath: '/device'
      preLoaderRoute: typeof BaseDeviceImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/': {
      id: '/_base/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof BaseIndexLazyImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf_/door-leaf-package': {
      id: '/_base/door-leaf_/door-leaf-package'
      path: '/door-leaf/door-leaf-package'
      fullPath: '/door-leaf/door-leaf-package'
      preLoaderRoute: typeof BaseDoorLeafDoorLeafPackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf_/door-leaf-production-line': {
      id: '/_base/door-leaf_/door-leaf-production-line'
      path: '/door-leaf/door-leaf-production-line'
      fullPath: '/door-leaf/door-leaf-production-line'
      preLoaderRoute: typeof BaseDoorLeafDoorLeafProductionLineImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf_/door-leaf-workshop': {
      id: '/_base/door-leaf_/door-leaf-workshop'
      path: '/door-leaf/door-leaf-workshop'
      fullPath: '/door-leaf/door-leaf-workshop'
      preLoaderRoute: typeof BaseDoorLeafDoorLeafWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf_/door-skin-panel-production-line': {
      id: '/_base/door-leaf_/door-skin-panel-production-line'
      path: '/door-leaf/door-skin-panel-production-line'
      fullPath: '/door-leaf/door-skin-panel-production-line'
      preLoaderRoute: typeof BaseDoorLeafDoorSkinPanelProductionLineImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/door-leaf_/door-skin-panel-workshop': {
      id: '/_base/door-leaf_/door-skin-panel-workshop'
      path: '/door-leaf/door-skin-panel-workshop'
      fullPath: '/door-leaf/door-skin-panel-workshop'
      preLoaderRoute: typeof BaseDoorLeafDoorSkinPanelWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plan_/plan': {
      id: '/_base/plan_/plan'
      path: '/plan/plan'
      fullPath: '/plan/plan'
      preLoaderRoute: typeof BasePlanPlanImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/door-frame-workshop': {
      id: '/_base/plate_/door-frame-workshop'
      path: '/plate/door-frame-workshop'
      fullPath: '/plate/door-frame-workshop'
      preLoaderRoute: typeof BasePlateDoorFrameWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/hanging-board-workshop': {
      id: '/_base/plate_/hanging-board-workshop'
      path: '/plate/hanging-board-workshop'
      fullPath: '/plate/hanging-board-workshop'
      preLoaderRoute: typeof BasePlateHangingBoardWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/hanging-cutting': {
      id: '/_base/plate_/hanging-cutting'
      path: '/plate/hanging-cutting'
      fullPath: '/plate/hanging-cutting'
      preLoaderRoute: typeof BasePlateHangingCuttingImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/hanging-package': {
      id: '/_base/plate_/hanging-package'
      path: '/plate/hanging-package'
      fullPath: '/plate/hanging-package'
      preLoaderRoute: typeof BasePlateHangingPackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/l-line-fine-cut': {
      id: '/_base/plate_/l-line-fine-cut'
      path: '/plate/l-line-fine-cut'
      fullPath: '/plate/l-line-fine-cut'
      preLoaderRoute: typeof BasePlateLLineFineCutImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/l-line-package': {
      id: '/_base/plate_/l-line-package'
      path: '/plate/l-line-package'
      fullPath: '/plate/l-line-package'
      preLoaderRoute: typeof BasePlateLLinePackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/l-line-wrap': {
      id: '/_base/plate_/l-line-wrap'
      path: '/plate/l-line-wrap'
      fullPath: '/plate/l-line-wrap'
      preLoaderRoute: typeof BasePlateLLineWrapImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/line-workshop': {
      id: '/_base/plate_/line-workshop'
      path: '/plate/line-workshop'
      fullPath: '/plate/line-workshop'
      preLoaderRoute: typeof BasePlateLineWorkshopImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/plate-cutting': {
      id: '/_base/plate_/plate-cutting'
      path: '/plate/plate-cutting'
      fullPath: '/plate/plate-cutting'
      preLoaderRoute: typeof BasePlatePlateCuttingImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/plate-nailing': {
      id: '/_base/plate_/plate-nailing'
      path: '/plate/plate-nailing'
      fullPath: '/plate/plate-nailing'
      preLoaderRoute: typeof BasePlatePlateNailingImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/plate-package': {
      id: '/_base/plate_/plate-package'
      path: '/plate/plate-package'
      fullPath: '/plate/plate-package'
      preLoaderRoute: typeof BasePlatePlatePackageImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/plate-wrap': {
      id: '/_base/plate_/plate-wrap'
      path: '/plate/plate-wrap'
      fullPath: '/plate/plate-wrap'
      preLoaderRoute: typeof BasePlatePlateWrapImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/plate_/wireframe': {
      id: '/_base/plate_/wireframe'
      path: '/plate/wireframe'
      fullPath: '/plate/wireframe'
      preLoaderRoute: typeof BasePlateWireframeImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/quality_/quality': {
      id: '/_base/quality_/quality'
      path: '/quality/quality'
      fullPath: '/quality/quality'
      preLoaderRoute: typeof BaseQualityQualityImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/warehouse_/cargo-management': {
      id: '/_base/warehouse_/cargo-management'
      path: '/warehouse/cargo-management'
      fullPath: '/warehouse/cargo-management'
      preLoaderRoute: typeof BaseWarehouseCargoManagementImport
      parentRoute: typeof BaseLazyImport
    }
    '/_base/warehouse_/warehouse': {
      id: '/_base/warehouse_/warehouse'
      path: '/warehouse/warehouse'
      fullPath: '/warehouse/warehouse'
      preLoaderRoute: typeof BaseWarehouseWarehouseImport
      parentRoute: typeof BaseLazyImport
    }
  }
}

// Create and export the route tree

interface BaseLazyRouteChildren {
  BaseDeviceRoute: typeof BaseDeviceRoute
  BaseIndexLazyRoute: typeof BaseIndexLazyRoute
  BaseDoorLeafDoorLeafPackageRoute: typeof BaseDoorLeafDoorLeafPackageRoute
  BaseDoorLeafDoorLeafProductionLineRoute: typeof BaseDoorLeafDoorLeafProductionLineRoute
  BaseDoorLeafDoorLeafWorkshopRoute: typeof BaseDoorLeafDoorLeafWorkshopRoute
  BaseDoorLeafDoorSkinPanelProductionLineRoute: typeof BaseDoorLeafDoorSkinPanelProductionLineRoute
  BaseDoorLeafDoorSkinPanelWorkshopRoute: typeof BaseDoorLeafDoorSkinPanelWorkshopRoute
  BasePlanPlanRoute: typeof BasePlanPlanRoute
  BasePlateDoorFrameWorkshopRoute: typeof BasePlateDoorFrameWorkshopRoute
  BasePlateHangingBoardWorkshopRoute: typeof BasePlateHangingBoardWorkshopRoute
  BasePlateHangingCuttingRoute: typeof BasePlateHangingCuttingRoute
  BasePlateHangingPackageRoute: typeof BasePlateHangingPackageRoute
  BasePlateLLineFineCutRoute: typeof BasePlateLLineFineCutRoute
  BasePlateLLinePackageRoute: typeof BasePlateLLinePackageRoute
  BasePlateLLineWrapRoute: typeof BasePlateLLineWrapRoute
  BasePlateLineWorkshopRoute: typeof BasePlateLineWorkshopRoute
  BasePlatePlateCuttingRoute: typeof BasePlatePlateCuttingRoute
  BasePlatePlateNailingRoute: typeof BasePlatePlateNailingRoute
  BasePlatePlatePackageRoute: typeof BasePlatePlatePackageRoute
  BasePlatePlateWrapRoute: typeof BasePlatePlateWrapRoute
  BasePlateWireframeRoute: typeof BasePlateWireframeRoute
  BaseQualityQualityRoute: typeof BaseQualityQualityRoute
  BaseWarehouseCargoManagementRoute: typeof BaseWarehouseCargoManagementRoute
  BaseWarehouseWarehouseRoute: typeof BaseWarehouseWarehouseRoute
}

const BaseLazyRouteChildren: BaseLazyRouteChildren = {
  BaseDeviceRoute: BaseDeviceRoute,
  BaseIndexLazyRoute: BaseIndexLazyRoute,
  BaseDoorLeafDoorLeafPackageRoute: BaseDoorLeafDoorLeafPackageRoute,
  BaseDoorLeafDoorLeafProductionLineRoute:
    BaseDoorLeafDoorLeafProductionLineRoute,
  BaseDoorLeafDoorLeafWorkshopRoute: BaseDoorLeafDoorLeafWorkshopRoute,
  BaseDoorLeafDoorSkinPanelProductionLineRoute:
    BaseDoorLeafDoorSkinPanelProductionLineRoute,
  BaseDoorLeafDoorSkinPanelWorkshopRoute:
    BaseDoorLeafDoorSkinPanelWorkshopRoute,
  BasePlanPlanRoute: BasePlanPlanRoute,
  BasePlateDoorFrameWorkshopRoute: BasePlateDoorFrameWorkshopRoute,
  BasePlateHangingBoardWorkshopRoute: BasePlateHangingBoardWorkshopRoute,
  BasePlateHangingCuttingRoute: BasePlateHangingCuttingRoute,
  BasePlateHangingPackageRoute: BasePlateHangingPackageRoute,
  BasePlateLLineFineCutRoute: BasePlateLLineFineCutRoute,
  BasePlateLLinePackageRoute: BasePlateLLinePackageRoute,
  BasePlateLLineWrapRoute: BasePlateLLineWrapRoute,
  BasePlateLineWorkshopRoute: BasePlateLineWorkshopRoute,
  BasePlatePlateCuttingRoute: BasePlatePlateCuttingRoute,
  BasePlatePlateNailingRoute: BasePlatePlateNailingRoute,
  BasePlatePlatePackageRoute: BasePlatePlatePackageRoute,
  BasePlatePlateWrapRoute: BasePlatePlateWrapRoute,
  BasePlateWireframeRoute: BasePlateWireframeRoute,
  BaseQualityQualityRoute: BaseQualityQualityRoute,
  BaseWarehouseCargoManagementRoute: BaseWarehouseCargoManagementRoute,
  BaseWarehouseWarehouseRoute: BaseWarehouseWarehouseRoute,
}

const BaseLazyRouteWithChildren = BaseLazyRoute._addFileChildren(
  BaseLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/$': typeof SplatLazyRoute
  '': typeof BaseLazyRouteWithChildren
  '/device': typeof BaseDeviceRoute
  '/': typeof BaseIndexLazyRoute
  '/door-leaf/door-leaf-package': typeof BaseDoorLeafDoorLeafPackageRoute
  '/door-leaf/door-leaf-production-line': typeof BaseDoorLeafDoorLeafProductionLineRoute
  '/door-leaf/door-leaf-workshop': typeof BaseDoorLeafDoorLeafWorkshopRoute
  '/door-leaf/door-skin-panel-production-line': typeof BaseDoorLeafDoorSkinPanelProductionLineRoute
  '/door-leaf/door-skin-panel-workshop': typeof BaseDoorLeafDoorSkinPanelWorkshopRoute
  '/plan/plan': typeof BasePlanPlanRoute
  '/plate/door-frame-workshop': typeof BasePlateDoorFrameWorkshopRoute
  '/plate/hanging-board-workshop': typeof BasePlateHangingBoardWorkshopRoute
  '/plate/hanging-cutting': typeof BasePlateHangingCuttingRoute
  '/plate/hanging-package': typeof BasePlateHangingPackageRoute
  '/plate/l-line-fine-cut': typeof BasePlateLLineFineCutRoute
  '/plate/l-line-package': typeof BasePlateLLinePackageRoute
  '/plate/l-line-wrap': typeof BasePlateLLineWrapRoute
  '/plate/line-workshop': typeof BasePlateLineWorkshopRoute
  '/plate/plate-cutting': typeof BasePlatePlateCuttingRoute
  '/plate/plate-nailing': typeof BasePlatePlateNailingRoute
  '/plate/plate-package': typeof BasePlatePlatePackageRoute
  '/plate/plate-wrap': typeof BasePlatePlateWrapRoute
  '/plate/wireframe': typeof BasePlateWireframeRoute
  '/quality/quality': typeof BaseQualityQualityRoute
  '/warehouse/cargo-management': typeof BaseWarehouseCargoManagementRoute
  '/warehouse/warehouse': typeof BaseWarehouseWarehouseRoute
}

export interface FileRoutesByTo {
  '/$': typeof SplatLazyRoute
  '/device': typeof BaseDeviceRoute
  '/': typeof BaseIndexLazyRoute
  '/door-leaf/door-leaf-package': typeof BaseDoorLeafDoorLeafPackageRoute
  '/door-leaf/door-leaf-production-line': typeof BaseDoorLeafDoorLeafProductionLineRoute
  '/door-leaf/door-leaf-workshop': typeof BaseDoorLeafDoorLeafWorkshopRoute
  '/door-leaf/door-skin-panel-production-line': typeof BaseDoorLeafDoorSkinPanelProductionLineRoute
  '/door-leaf/door-skin-panel-workshop': typeof BaseDoorLeafDoorSkinPanelWorkshopRoute
  '/plan/plan': typeof BasePlanPlanRoute
  '/plate/door-frame-workshop': typeof BasePlateDoorFrameWorkshopRoute
  '/plate/hanging-board-workshop': typeof BasePlateHangingBoardWorkshopRoute
  '/plate/hanging-cutting': typeof BasePlateHangingCuttingRoute
  '/plate/hanging-package': typeof BasePlateHangingPackageRoute
  '/plate/l-line-fine-cut': typeof BasePlateLLineFineCutRoute
  '/plate/l-line-package': typeof BasePlateLLinePackageRoute
  '/plate/l-line-wrap': typeof BasePlateLLineWrapRoute
  '/plate/line-workshop': typeof BasePlateLineWorkshopRoute
  '/plate/plate-cutting': typeof BasePlatePlateCuttingRoute
  '/plate/plate-nailing': typeof BasePlatePlateNailingRoute
  '/plate/plate-package': typeof BasePlatePlatePackageRoute
  '/plate/plate-wrap': typeof BasePlatePlateWrapRoute
  '/plate/wireframe': typeof BasePlateWireframeRoute
  '/quality/quality': typeof BaseQualityQualityRoute
  '/warehouse/cargo-management': typeof BaseWarehouseCargoManagementRoute
  '/warehouse/warehouse': typeof BaseWarehouseWarehouseRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$': typeof SplatLazyRoute
  '/_base': typeof BaseLazyRouteWithChildren
  '/_base/device': typeof BaseDeviceRoute
  '/_base/': typeof BaseIndexLazyRoute
  '/_base/door-leaf_/door-leaf-package': typeof BaseDoorLeafDoorLeafPackageRoute
  '/_base/door-leaf_/door-leaf-production-line': typeof BaseDoorLeafDoorLeafProductionLineRoute
  '/_base/door-leaf_/door-leaf-workshop': typeof BaseDoorLeafDoorLeafWorkshopRoute
  '/_base/door-leaf_/door-skin-panel-production-line': typeof BaseDoorLeafDoorSkinPanelProductionLineRoute
  '/_base/door-leaf_/door-skin-panel-workshop': typeof BaseDoorLeafDoorSkinPanelWorkshopRoute
  '/_base/plan_/plan': typeof BasePlanPlanRoute
  '/_base/plate_/door-frame-workshop': typeof BasePlateDoorFrameWorkshopRoute
  '/_base/plate_/hanging-board-workshop': typeof BasePlateHangingBoardWorkshopRoute
  '/_base/plate_/hanging-cutting': typeof BasePlateHangingCuttingRoute
  '/_base/plate_/hanging-package': typeof BasePlateHangingPackageRoute
  '/_base/plate_/l-line-fine-cut': typeof BasePlateLLineFineCutRoute
  '/_base/plate_/l-line-package': typeof BasePlateLLinePackageRoute
  '/_base/plate_/l-line-wrap': typeof BasePlateLLineWrapRoute
  '/_base/plate_/line-workshop': typeof BasePlateLineWorkshopRoute
  '/_base/plate_/plate-cutting': typeof BasePlatePlateCuttingRoute
  '/_base/plate_/plate-nailing': typeof BasePlatePlateNailingRoute
  '/_base/plate_/plate-package': typeof BasePlatePlatePackageRoute
  '/_base/plate_/plate-wrap': typeof BasePlatePlateWrapRoute
  '/_base/plate_/wireframe': typeof BasePlateWireframeRoute
  '/_base/quality_/quality': typeof BaseQualityQualityRoute
  '/_base/warehouse_/cargo-management': typeof BaseWarehouseCargoManagementRoute
  '/_base/warehouse_/warehouse': typeof BaseWarehouseWarehouseRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$'
    | ''
    | '/device'
    | '/'
    | '/door-leaf/door-leaf-package'
    | '/door-leaf/door-leaf-production-line'
    | '/door-leaf/door-leaf-workshop'
    | '/door-leaf/door-skin-panel-production-line'
    | '/door-leaf/door-skin-panel-workshop'
    | '/plan/plan'
    | '/plate/door-frame-workshop'
    | '/plate/hanging-board-workshop'
    | '/plate/hanging-cutting'
    | '/plate/hanging-package'
    | '/plate/l-line-fine-cut'
    | '/plate/l-line-package'
    | '/plate/l-line-wrap'
    | '/plate/line-workshop'
    | '/plate/plate-cutting'
    | '/plate/plate-nailing'
    | '/plate/plate-package'
    | '/plate/plate-wrap'
    | '/plate/wireframe'
    | '/quality/quality'
    | '/warehouse/cargo-management'
    | '/warehouse/warehouse'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$'
    | '/device'
    | '/'
    | '/door-leaf/door-leaf-package'
    | '/door-leaf/door-leaf-production-line'
    | '/door-leaf/door-leaf-workshop'
    | '/door-leaf/door-skin-panel-production-line'
    | '/door-leaf/door-skin-panel-workshop'
    | '/plan/plan'
    | '/plate/door-frame-workshop'
    | '/plate/hanging-board-workshop'
    | '/plate/hanging-cutting'
    | '/plate/hanging-package'
    | '/plate/l-line-fine-cut'
    | '/plate/l-line-package'
    | '/plate/l-line-wrap'
    | '/plate/line-workshop'
    | '/plate/plate-cutting'
    | '/plate/plate-nailing'
    | '/plate/plate-package'
    | '/plate/plate-wrap'
    | '/plate/wireframe'
    | '/quality/quality'
    | '/warehouse/cargo-management'
    | '/warehouse/warehouse'
  id:
    | '__root__'
    | '/$'
    | '/_base'
    | '/_base/device'
    | '/_base/'
    | '/_base/door-leaf_/door-leaf-package'
    | '/_base/door-leaf_/door-leaf-production-line'
    | '/_base/door-leaf_/door-leaf-workshop'
    | '/_base/door-leaf_/door-skin-panel-production-line'
    | '/_base/door-leaf_/door-skin-panel-workshop'
    | '/_base/plan_/plan'
    | '/_base/plate_/door-frame-workshop'
    | '/_base/plate_/hanging-board-workshop'
    | '/_base/plate_/hanging-cutting'
    | '/_base/plate_/hanging-package'
    | '/_base/plate_/l-line-fine-cut'
    | '/_base/plate_/l-line-package'
    | '/_base/plate_/l-line-wrap'
    | '/_base/plate_/line-workshop'
    | '/_base/plate_/plate-cutting'
    | '/_base/plate_/plate-nailing'
    | '/_base/plate_/plate-package'
    | '/_base/plate_/plate-wrap'
    | '/_base/plate_/wireframe'
    | '/_base/quality_/quality'
    | '/_base/warehouse_/cargo-management'
    | '/_base/warehouse_/warehouse'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SplatLazyRoute: typeof SplatLazyRoute
  BaseLazyRoute: typeof BaseLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  SplatLazyRoute: SplatLazyRoute,
  BaseLazyRoute: BaseLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$",
        "/_base"
      ]
    },
    "/$": {
      "filePath": "$.lazy.tsx"
    },
    "/_base": {
      "filePath": "_base.lazy.tsx",
      "children": [
        "/_base/device",
        "/_base/",
        "/_base/door-leaf_/door-leaf-package",
        "/_base/door-leaf_/door-leaf-production-line",
        "/_base/door-leaf_/door-leaf-workshop",
        "/_base/door-leaf_/door-skin-panel-production-line",
        "/_base/door-leaf_/door-skin-panel-workshop",
        "/_base/plan_/plan",
        "/_base/plate_/door-frame-workshop",
        "/_base/plate_/hanging-board-workshop",
        "/_base/plate_/hanging-cutting",
        "/_base/plate_/hanging-package",
        "/_base/plate_/l-line-fine-cut",
        "/_base/plate_/l-line-package",
        "/_base/plate_/l-line-wrap",
        "/_base/plate_/line-workshop",
        "/_base/plate_/plate-cutting",
        "/_base/plate_/plate-nailing",
        "/_base/plate_/plate-package",
        "/_base/plate_/plate-wrap",
        "/_base/plate_/wireframe",
        "/_base/quality_/quality",
        "/_base/warehouse_/cargo-management",
        "/_base/warehouse_/warehouse"
      ]
    },
    "/_base/device": {
      "filePath": "_base.device.tsx",
      "parent": "/_base"
    },
    "/_base/": {
      "filePath": "_base.index.lazy.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf_/door-leaf-package": {
      "filePath": "_base.door-leaf_.door-leaf-package.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf_/door-leaf-production-line": {
      "filePath": "_base.door-leaf_.door-leaf-production-line.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf_/door-leaf-workshop": {
      "filePath": "_base.door-leaf_.door-leaf-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf_/door-skin-panel-production-line": {
      "filePath": "_base.door-leaf_.door-skin-panel-production-line.tsx",
      "parent": "/_base"
    },
    "/_base/door-leaf_/door-skin-panel-workshop": {
      "filePath": "_base.door-leaf_.door-skin-panel-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plan_/plan": {
      "filePath": "_base.plan_.plan.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/door-frame-workshop": {
      "filePath": "_base.plate_.door-frame-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/hanging-board-workshop": {
      "filePath": "_base.plate_.hanging-board-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/hanging-cutting": {
      "filePath": "_base.plate_.hanging-cutting.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/hanging-package": {
      "filePath": "_base.plate_.hanging-package.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/l-line-fine-cut": {
      "filePath": "_base.plate_.l-line-fine-cut.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/l-line-package": {
      "filePath": "_base.plate_.l-line-package.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/l-line-wrap": {
      "filePath": "_base.plate_.l-line-wrap.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/line-workshop": {
      "filePath": "_base.plate_.line-workshop.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/plate-cutting": {
      "filePath": "_base.plate_.plate-cutting.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/plate-nailing": {
      "filePath": "_base.plate_.plate-nailing.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/plate-package": {
      "filePath": "_base.plate_.plate-package.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/plate-wrap": {
      "filePath": "_base.plate_.plate-wrap.tsx",
      "parent": "/_base"
    },
    "/_base/plate_/wireframe": {
      "filePath": "_base.plate_.wireframe.tsx",
      "parent": "/_base"
    },
    "/_base/quality_/quality": {
      "filePath": "_base.quality_.quality.tsx",
      "parent": "/_base"
    },
    "/_base/warehouse_/cargo-management": {
      "filePath": "_base.warehouse_.cargo-management.tsx",
      "parent": "/_base"
    },
    "/_base/warehouse_/warehouse": {
      "filePath": "_base.warehouse_.warehouse.tsx",
      "parent": "/_base"
    }
  }
}
ROUTE_MANIFEST_END */
